<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.spjzweb.dao.ItemRecordDao">


    <select id="getCountAllByLike" resultType="int">
        select count(*) from item_record r
        <where>
            <if test="itemcode!=null and itemcode!=''">
                AND r.itemcode LIKE CONCAT('%',#{itemcode},'%')
            </if>
            <if test="thread_inspection_record_code!=null and thread_inspection_record_code!=''">
                AND r.thread_inspection_record_code LIKE CONCAT('%',#{thread_inspection_record_code},'%')
            </if>
        </where>
    </select>

    <select id="getAllByLike" resultType="map">
        select * from  item_record r

        <where>
            <if test="itemcode!=null and itemcode!=''">
                AND r.itemcode LIKE CONCAT('%',#{itemcode},'%')
            </if>
            <if test="thread_inspection_record_code!=null and thread_inspection_record_code!=''">
                AND r.thread_inspection_record_code LIKE CONCAT('%',#{thread_inspection_record_code},'%')
            </if>
        </where>
        ORDER BY id DESC
        limit #{skip},#{take}
    </select>


    <select id="getItemRecordByInspectionRecordCode" resultType="map">
        select r.*,d.item_frequency,d.item_max_value,d.item_min_value,d.both_ends,stit.measure_item_name, concat(stit.measure_item_code ,'(' ,stit.measure_item_name, ')' ) as code_and_name  from  item_record r inner join static_measurement_item stit on stit.measure_item_code=r.itemcode
        inner join dynamic_measurement_item d on d.measure_item_code=r.itemcode

        <where>
            <if test="thread_inspection_record_code!=null and thread_inspection_record_code!=''">
                AND r.thread_inspection_record_code =#{thread_inspection_record_code}
            </if>
        </where>
    </select>


    <insert id="addItemRecord" parameterType="com.spjzweb.entity.ItemRecord">
        INSERT INTO item_record(itemcode,itemvalue,toolcode1,toolcode2,measure_sample1,measure_sample2,thread_inspection_record_code) VALUES (#{itemcode},#{itemvalue},#{toolcode1},#{toolcode2},#{measure_sample1},#{measure_sample2},#{thread_inspection_record_code})
    </insert>

    <update id="updateItemRecord" parameterType="com.spjzweb.entity.ItemRecord">
        UPDATE item_record set itemcode=#{itemcode},itemvalue=#{itemvalue},toolcode1=#{toolcode1},toolcode2=#{toolcode2},measure_sample1=#{measure_sample1},measure_sample2=#{measure_sample2},thread_inspection_record_code=#{thread_inspection_record_code} where id=#{id}
    </update>


    <delete id="delItemRecord">
        delete from item_record WHERE
        <foreach collection="array" item="item" open="id in (" separator="," close=")">
            #{item}
        </foreach>
    </delete>
    <!--修改时判断编号是否存在-->
    <select id="getItemRecordByItemCodeOfEdit" resultType="com.spjzweb.entity.ItemRecord">
        select * from  item_record r
        <where>
            <if test="itemcode!=null and itemcode!=''">
                AND r.itemcode=#{itemcode}
            </if>
            <if test="thread_inspection_record_code!=null and thread_inspection_record_code!=''">
                AND r.thread_inspection_record_code=#{thread_inspection_record_code}
            </if>
        </where>
        AND r.id!=#{id}
    </select>
    <!--添加时判断编号是否存在-->
    <select id="getItemRecordByItemCodeOfAdd" resultType="com.spjzweb.entity.ItemRecord">
        select * from  item_record r
        <where>
            <if test="itemcode!=null and itemcode!=''">
                AND r.itemcode=#{itemcode}
            </if>
            <if test="thread_inspection_record_code!=null and thread_inspection_record_code!=''">
                AND r.thread_inspection_record_code=#{thread_inspection_record_code}
            </if>
        </where>
    </select>

    <insert id="addItemRecordByWinform" parameterType="java.util.ArrayList">
       INSERT INTO item_record (itemcode,itemvalue,toolcode1,toolcode2,measure_sample1,measure_sample2,thread_inspection_record_code)VALUES
       <foreach collection="list" item="item" index="index" separator=",">
           (#{item.itemcode},#{item.itemvalue},#{item.toolcode1},#{item.toolcode2},#{item.measure_sample1},#{item.measure_sample2},#{item.thread_inspection_record_code})
       </foreach>
    </insert>

    <!--根据检验记录编号查询数据(winform)-->
    <select id="getItemRecordByInspectionNoOfWinform" resultType="map">
        select i.*,s.* from item_record i
        inner join static_measurement_item s on i.itemcode=s.measure_item_code
        <where>
            <if test="thread_inspection_record_code!=null and thread_inspection_record_code!=''">
                AND r.thread_inspection_record_code=#{thread_inspection_record_code}
            </if>
        </where>
    </select>
    <update id="updataItemRecordByCode" parameterType="java.util.List">
        <foreach collection="list" item="item" index="index" separator=",">
            update item_record
               SET itemvalue=#{item.itemvalue},
                 toolcode1=#{item.toolcode1},
                 toolcode2=#{item.toolcode2},
                 measure_sample1=#{item.measure_sample1},
                 measure_sample2=#{item.measure_sample2}
               where itemcode = #{item.itemcode} AND thread_inspection_record_code=#{item.thread_inspection_record_code}
        </foreach>
    </update>
    <update id="updataItemRecordByCodeSingle" parameterType="com.spjzweb.entity.ItemRecord">
        UPDATE item_record set  itemvalue=#{itemvalue},toolcode1=#{toolcode1},toolcode2=#{toolcode2},measure_sample1=#{measure_sample1},measure_sample2=#{measure_sample2} where itemcode=#{itemcode} AND thread_inspection_record_code=#{thread_inspection_record_code}
    </update>
    <!--根据接箍检验编号查询检验记录-->
    <select id="getInspectionRecordByInspectionNo" resultType="map">
        SELECT * from item_record WHERE thread_inspection_record_code=#{thread_inspection_record_code}
    </select>
</mapper>